{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar networks = {\n  polygon: {\n    chainId: \"0x\" + Number(137).toString(16),\n    chainName: \"Polygon Mainnet\",\n    nativeCurrency: {\n      name: \"MATIC\",\n      symbol: \"MATIC\",\n      decimals: 18\n    },\n    rpcUrls: [\"https://polygon-rpc.com/\"],\n    blockExplorerUrls: [\"https://polygonscan.com/\"]\n  },\n  bsc: {\n    chainId: \"0x\" + Number(56).toString(16),\n    chainName: \"Binance Smart Chain Mainnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\"https://bsc-dataseed1.binance.org\", \"https://bsc-dataseed2.binance.org\", \"https://bsc-dataseed3.binance.org\", \"https://bsc-dataseed4.binance.org\", \"https://bsc-dataseed1.defibit.io\", \"https://bsc-dataseed2.defibit.io\", \"https://bsc-dataseed3.defibit.io\", \"https://bsc-dataseed4.defibit.io\", \"https://bsc-dataseed1.ninicoin.io\", \"https://bsc-dataseed2.ninicoin.io\", \"https://bsc-dataseed3.ninicoin.io\", \"https://bsc-dataseed4.ninicoin.io\", \"wss://bsc-ws-node.nariox.org\"],\n    blockExplorerUrls: [\"https://bscscan.com\"]\n  }\n};\n\nvar changeNetwork = function changeNetwork(_ref) {\n  var networkName, setError;\n  return _regeneratorRuntime.async(function changeNetwork$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          networkName = _ref.networkName, setError = _ref.setError;\n          _context.prev = 1;\n\n          if (window.ethereum) {\n            _context.next = 4;\n            break;\n          }\n\n          throw new Error(\"No crypto wallet found\");\n\n        case 4:\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [_objectSpread({}, networks[networkName])]\n          }));\n\n        case 6:\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](1);\n          setError(_context.t0.message);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\n\nexport default function chainIDChange() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var handleNetworkSwitch = function handleNetworkSwitch(networkName) {\n    return _regeneratorRuntime.async(function handleNetworkSwitch$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setError();\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(changeNetwork({\n              networkName: networkName,\n              setError: setError\n            }));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var networkChanged = function networkChanged(chainId) {\n    console.log({\n      chainId: chainId\n    });\n  };\n\n  useEffect(function () {\n    window.ethereum.on(\"chainChanged\", networkChanged);\n    return function () {\n      window.ethereum.removeListener(\"chainChanged\", networkChanged);\n    };\n  }, []);\n  return _jsx(\"div\", {\n    className: \"credit-card w-full lg:w-1/2 sm:w-auto shadow-lg mx-auto rounded-xl bg-white\",\n    children: _jsxs(\"main\", {\n      className: \"mt-4 p-4\",\n      children: [_jsx(\"h1\", {\n        className: \"text-xl font-semibold text-gray-700 text-center\",\n        children: \"Force MetaMask network\"\n      }), _jsxs(\"div\", {\n        className: \"mt-4\",\n        children: [_jsx(\"button\", {\n          onClick: function onClick() {\n            return handleNetworkSwitch(\"polygon\");\n          },\n          className: \"mt-2 mb-2 btn btn-primary submit-button focus:ring focus:outline-none w-full\",\n          children: \"Switch to Polygon\"\n        }), _jsx(\"button\", {\n          onClick: function onClick() {\n            return handleNetworkSwitch(\"bsc\");\n          },\n          className: \"mt-2 mb-2 bg-warning border-warning btn submit-button focus:ring focus:outline-none w-full\",\n          children: \"Switch to BSC\"\n        }), _jsx(ErrorMessage, {\n          message: error\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["/Users/dearwolves/Documents/Github/sample/converterMetamask/src/screen/chainId.tsx"],"names":["useState","useEffect","ErrorMessage","networks","polygon","chainId","Number","toString","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","bsc","changeNetwork","networkName","setError","window","ethereum","Error","request","method","params","message","chainIDChange","error","handleNetworkSwitch","networkChanged","console","log","on","removeListener"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nconst networks = {\n  polygon: {\n    chainId: `0x${Number(137).toString(16)}`,\n    chainName: \"Polygon Mainnet\",\n    nativeCurrency: {\n      name: \"MATIC\",\n      symbol: \"MATIC\",\n      decimals: 18\n    },\n    rpcUrls: [\"https://polygon-rpc.com/\"],\n    blockExplorerUrls: [\"https://polygonscan.com/\"]\n  },\n  bsc: {\n    chainId: `0x${Number(56).toString(16)}`,\n    chainName: \"Binance Smart Chain Mainnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\n      \"https://bsc-dataseed1.binance.org\",\n      \"https://bsc-dataseed2.binance.org\",\n      \"https://bsc-dataseed3.binance.org\",\n      \"https://bsc-dataseed4.binance.org\",\n      \"https://bsc-dataseed1.defibit.io\",\n      \"https://bsc-dataseed2.defibit.io\",\n      \"https://bsc-dataseed3.defibit.io\",\n      \"https://bsc-dataseed4.defibit.io\",\n      \"https://bsc-dataseed1.ninicoin.io\",\n      \"https://bsc-dataseed2.ninicoin.io\",\n      \"https://bsc-dataseed3.ninicoin.io\",\n      \"https://bsc-dataseed4.ninicoin.io\",\n      \"wss://bsc-ws-node.nariox.org\"\n    ],\n    blockExplorerUrls: [\"https://bscscan.com\"]\n  }\n};\n\nconst changeNetwork = async ({ networkName, setError }) => {\n  try {\n    if (!window.ethereum) throw new Error(\"No crypto wallet found\");\n    await window.ethereum.request({\n      method: \"wallet_addEthereumChain\",\n      params: [\n        {\n          ...networks[networkName]\n        }\n      ]\n    });\n  } catch (err) {\n    setError(err.message);\n  }\n};\n\nexport default function chainIDChange() {\n  const [error, setError] = useState();\n\n  const handleNetworkSwitch = async (networkName) => {\n    setError();\n    await changeNetwork({ networkName, setError });\n  };\n\n  const networkChanged = (chainId) => {\n    console.log({ chainId });\n  };\n\n  useEffect(() => {\n    window.ethereum.on(\"chainChanged\", networkChanged);\n\n    return () => {\n      window.ethereum.removeListener(\"chainChanged\", networkChanged);\n    };\n  }, []);\n\n  return (\n    <div className=\"credit-card w-full lg:w-1/2 sm:w-auto shadow-lg mx-auto rounded-xl bg-white\">\n      <main className=\"mt-4 p-4\">\n        <h1 className=\"text-xl font-semibold text-gray-700 text-center\">\n          Force MetaMask network\n        </h1>\n        <div className=\"mt-4\">\n          <button\n            onClick={() => handleNetworkSwitch(\"polygon\")}\n            className=\"mt-2 mb-2 btn btn-primary submit-button focus:ring focus:outline-none w-full\"\n          >\n            Switch to Polygon\n          </button>\n          <button\n            onClick={() => handleNetworkSwitch(\"bsc\")}\n            className=\"mt-2 mb-2 bg-warning border-warning btn submit-button focus:ring focus:outline-none w-full\"\n          >\n            Switch to BSC\n          </button>\n          <ErrorMessage message={error} />\n        </div>\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}