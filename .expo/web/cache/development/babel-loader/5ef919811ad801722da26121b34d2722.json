{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NO_ACCOUNT = \"Donâ€™t have an account yet?\";\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      convert1: \"\",\n      convert2: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsx(View, {\n        style: styles.container,\n        children: _jsx(View, {\n          style: styles.styleLogo,\n          children: _jsxs(View, {\n            style: styles.styleBg,\n            children: [_jsxs(View, {\n              style: styles.styleBg2,\n              children: [_jsx(Text, {\n                style: styles.input2,\n                children: \"NEP \"\n              }), _jsx(TextInput, {\n                style: styles.input,\n                placeholder: \"NEP\",\n                placeholderTextColor: \"#000\",\n                value: this.state.convert1,\n                keyboardType: \"numeric\",\n                onChangeText: function onChangeText(text) {\n                  return _this2.handleNEPTextchange(text);\n                },\n                value: this.state.convert1,\n                maxLength: 13,\n                textContentType: \"number\"\n              })]\n            }), _jsxs(View, {\n              style: styles.styleBg2,\n              children: [_jsx(Text, {\n                style: styles.input2,\n                children: \"BUSD\"\n              }), _jsx(TextInput, {\n                style: styles.input,\n                placeholder: \"BUSD\",\n                placeholderTextColor: \"#000\",\n                value: this.state.convert2,\n                keyboardType: \"numeric\",\n                onChangeText: function onChangeText(text) {\n                  return _this2.handleBUSDTextchange(text);\n                },\n                value: this.state.convert2,\n                maxLength: 13,\n                textContentType: \"number\"\n              })]\n            }), _jsx(Text, {\n              style: styles.txtcheckwallet,\n              onPress: function onPress() {\n                return _this2.props.navigation.navigate(\"wallet\");\n              },\n              children: \"Check wallet details\"\n            })]\n          })\n        })\n      });\n    }\n  }, {\n    key: \"handleNEPTextchange\",\n    value: function handleNEPTextchange(text) {\n      console.log(text);\n      var newText = \"\";\n      var decimaltext = \"\";\n      var numbers = \"0123456789\";\n\n      for (var i = 0; i < text.length; i++) {\n        if (numbers.indexOf(text[i]) > -1) {\n          newText = newText + text[i];\n          decimaltext = newText * 3;\n        } else {\n          alert(\"please enter numbers only\");\n        }\n      }\n\n      this.setState({\n        convert1: newText,\n        convert2: decimaltext\n      });\n    }\n  }, {\n    key: \"handleBUSDTextchange\",\n    value: function handleBUSDTextchange(text) {\n      console.log(text);\n      var newText = \"\";\n      var numbers = \"0123456789\";\n      var decimaltext = \"\";\n\n      for (var i = 0; i < text.length; i++) {\n        if (numbers.indexOf(text[i]) > -1) {\n          newText = newText + text[i];\n          decimaltext = newText / 3;\n        } else {\n          alert(\"please enter numbers only\");\n        }\n      }\n\n      this.setState({\n        convert2: newText,\n        convert1: parseFloat(decimaltext).toFixed(2)\n      });\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  styleLogo: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: '100%',\n    width: '100%'\n  },\n  input: {\n    backgroundColor: \"#fff\",\n    height: 50,\n    width: \"50%\",\n    margin: -2,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: \"#001fe8\",\n    padding: 10\n  },\n  input2: {\n    backgroundColor: \"#00ccff\",\n    height: 50,\n    width: \"15%\",\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: \"#001fe8\",\n    padding: 10\n  },\n  styleBg2: {\n    width: \"100%\",\n    alignItems: \"center\",\n    flex: 1,\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    marginTop: 70\n  },\n  styleBg3: {\n    width: \"50%\",\n    marginTop: 20,\n    alignItems: \"center\"\n  },\n  styleBg: {\n    backgroundColor: \"#00062e\",\n    height: 500,\n    width: 650,\n    marginTop: '15%',\n    alignItems: \"center\",\n    borderRadius: 15,\n    flex: 1\n  },\n  title: {\n    fontSize: 20,\n    padding: 20,\n    fontWeight: \"bold\"\n  },\n  txtcheckwallet: {\n    color: \"#001fe8\",\n    fontSize: 15,\n    fontWeight: \"bold\",\n    margin: 30\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/dearwolves/Documents/Github/sample/converterMetamask/src/screen/home_screen.tsx"],"names":["React","NO_ACCOUNT","HomeScreen","state","convert1","convert2","styles","container","styleLogo","styleBg","styleBg2","input2","input","text","handleNEPTextchange","handleBUSDTextchange","txtcheckwallet","props","navigation","navigate","console","log","newText","decimaltext","numbers","i","length","indexOf","alert","setState","parseFloat","toFixed","Component","StyleSheet","create","flex","alignItems","justifyContent","height","width","backgroundColor","margin","borderWidth","borderRadius","borderColor","padding","flexDirection","marginTop","styleBg3","title","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n} from \"react-native\";\n\nconst NO_ACCOUNT = \"Donâ€™t have an account yet?\";\n\nclass HomeScreen extends React.Component {\n  \n  constructor() {\n    super();\n\n    this.state = {\n      convert1: \"\",\n      convert2: \"\",\n    };\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n      \n        <View style={styles.styleLogo}>\n          <View style={styles.styleBg}>\n            <View style={styles.styleBg2}>\n              <Text style={styles.input2}>NEP </Text>\n              <TextInput\n                style={styles.input}\n                placeholder={\"NEP\"}\n                placeholderTextColor=\"#000\"\n                value={this.state.convert1}\n                keyboardType=\"numeric\"\n                onChangeText={(text) => this.handleNEPTextchange(text)}\n                value={this.state.convert1}\n                maxLength={13} //setting limit of input\n                textContentType=\"number\"\n              />\n            </View>\n\n            <View style={styles.styleBg2}>\n              <Text style={styles.input2}>BUSD</Text>\n              <TextInput\n                style={styles.input}\n                placeholder={\"BUSD\"}\n                placeholderTextColor=\"#000\"\n                value={this.state.convert2}\n                keyboardType=\"numeric\"\n                onChangeText={(text) => this.handleBUSDTextchange(text)}\n                value={this.state.convert2}\n                maxLength={13} //setting limit of input\n                textContentType=\"number\"\n              />\n            </View>\n              <Text\n                style={ styles.txtcheckwallet}\n                onPress={() => this.props.navigation.navigate(\"wallet\")}\n              >\n                Check wallet details\n              </Text>\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  handleNEPTextchange(text) {\n    console.log(text);\n    let newText = \"\";\n    let decimaltext = \"\"\n    let numbers = \"0123456789\";\n\n    for (var i = 0; i < text.length; i++) {\n      if (numbers.indexOf(text[i]) > -1) {\n        newText = newText + text[i];\n        decimaltext = newText * 3;\n      } else {\n        // your call back function\n        alert(\"please enter numbers only\");\n      }\n    }\n    this.setState({ convert1: newText, convert2: decimaltext });\n  }\n\n  handleBUSDTextchange(text) {\n    console.log(text);\n    let newText = \"\";\n    let numbers = \"0123456789\";\n    let decimaltext = \"\";\n\n    for (var i = 0; i < text.length; i++) {\n      if (numbers.indexOf(text[i]) > -1) {\n        newText = newText + text[i];\n        decimaltext = newText / 3;\n      } else {\n        // your call back function\n        alert(\"please enter numbers only\");\n      }\n    }\n    this.setState({ convert2: newText, convert1: parseFloat(decimaltext).toFixed(2) });\n  }\n}\n\nconst styles = StyleSheet.create({\n\n  styleLogo: {\n    flex: 1,\n    //backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    //backgroundColor: \"#00062e\",\n    height:'100%', width:'100%'\n    },\n\n  input: {\n    backgroundColor: \"#fff\",\n    height: 50,\n    width: \"50%\",\n    margin: -2,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: \"#001fe8\",\n    padding: 10,\n  },\n  input2: {\n    backgroundColor: \"#00ccff\",\n    height: 50,\n    width: \"15%\",\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: \"#001fe8\",\n    padding: 10,\n  },\n\n  styleBg2: {\n    width: \"100%\",\n    alignItems: \"center\",\n    flex: 1,\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    marginTop:70,\n  },\n\n  styleBg3: { width: \"50%\", marginTop: 20, alignItems: \"center\" },\n\n  styleBg: {\n    backgroundColor: \"#00062e\",\n    height: 500,\n    width: 650,\n    marginTop: '15%',\n    alignItems: \"center\",\n    borderRadius: 15,\n    flex:1\n  },\n \n  title: {fontSize: 20,\n    padding: 20,fontWeight: \"bold\",\n  },\n  txtcheckwallet: { color: \"#001fe8\", fontSize: 15, fontWeight: \"bold\",\n    margin: 30,},\n});\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}