{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useWeb3React, Web3ReactProvider } from \"@web3-react/core\";\nimport { injected } from \"../actions/connectors\";\nimport Web3 from \"web3\";\nimport TokenListRinkeby from \"../actions/token-list-rinkeby.json\";\nimport { useState } from \"react\";\nimport useBalance from \"../actions/useBalance\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction getLibrary(provider) {\n  return new Web3(provider);\n}\n\nexport default function () {\n  return _jsx(Web3ReactProvider, {\n    getLibrary: getLibrary,\n    children: _jsx(Wallet, {})\n  });\n}\n\nfunction Wallet() {\n  var _this = this;\n\n  var context = useWeb3React();\n\n  var _useWeb3React = useWeb3React(),\n      active = _useWeb3React.active,\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      nativeCurrency = _useWeb3React.nativeCurrency,\n      library = _useWeb3React.library,\n      connector = _useWeb3React.connector,\n      activate = _useWeb3React.activate,\n      deactivate = _useWeb3React.deactivate;\n\n  var _useState = useState(TokenListRinkeby[0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedToken = _useState2[0],\n      setSelectedToken = _useState2[1];\n\n  var _useBalance = useBalance(selectedToken.address, selectedToken.decimals),\n      _useBalance2 = _slicedToArray(_useBalance, 1),\n      balance = _useBalance2[0];\n\n  function connect() {\n    return _regeneratorRuntime.async(function connect$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(activate(injected));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  function disconnect() {\n    return _regeneratorRuntime.async(function disconnect$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            try {\n              deactivate();\n            } catch (ex) {\n              console.log(ex);\n            }\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.styleBg2,\n      children: [active ? _jsx(View, {\n        style: styles.styleBg2,\n        children: _jsx(Pressable, {\n          style: styles.button,\n          onPress: disconnect,\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Disconnect\"\n          })\n        })\n      }) : _jsx(Pressable, {\n        style: styles.button,\n        onPress: connect,\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Connect to MetaMask\"\n        })\n      }), active ? _jsx(Text, {\n        children: \"Connected\"\n      }) : _jsx(Text, {\n        children: \"Not connected\"\n      })]\n    }), _jsx(View, {\n      style: styles.styleBg2,\n      children: active ? _jsxs(View, {\n        style: styles.styleBg2,\n        children: [_jsxs(Text, {\n          style: styles.input,\n          children: [\"Account: \", account]\n        }), _jsxs(Text, {\n          style: styles.input,\n          children: [\"Chain ID: \", chainId]\n        }), _jsxs(Text, {\n          style: styles.input,\n          children: [\"Balance: \", balance]\n        })]\n      }) : _jsx(Text, {})\n    }), _jsx(View, {\n      style: styles.styleBg2,\n      children: _jsx(Pressable, {\n        style: styles.button,\n        onPress: function onPress() {\n          return _this.props.navigation.navigate(\"HomeScreen\");\n        },\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Back to Convertion\"\n        })\n      })\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: \"#000e8f\"\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"white\"\n  },\n  input: {\n    backgroundColor: \"#fff\",\n    height: 50,\n    width: \"50%\",\n    margin: -2,\n    borderWidth: 2,\n    borderColor: \"#001fe8\",\n    padding: 10\n  },\n  styleBg2: {\n    width: \"100%\",\n    alignItems: \"center\",\n    flex: 1,\n    justifyContent: \"center\",\n    marginTop: 70\n  },\n  styleBg3: {\n    width: \"50%\",\n    marginTop: 20,\n    alignItems: \"center\"\n  },\n  styleBg: {\n    backgroundColor: \"#00062e\",\n    height: 500,\n    width: 650,\n    marginTop: \"15%\",\n    alignItems: \"center\",\n    borderRadius: 15,\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/dearwolves/Documents/Github/sample/converterMetamask/src/screen/wallet.tsx"],"names":["React","useWeb3React","Web3ReactProvider","injected","Web3","TokenListRinkeby","useState","useBalance","getLibrary","provider","Wallet","context","active","account","chainId","nativeCurrency","library","connector","activate","deactivate","selectedToken","setSelectedToken","address","decimals","balance","connect","console","log","disconnect","ex","styles","styleBg2","button","text","input","props","navigation","navigate","StyleSheet","create","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","backgroundColor","fontSize","lineHeight","fontWeight","letterSpacing","color","height","width","margin","borderWidth","borderColor","padding","flex","marginTop","styleBg3","styleBg"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { View, Pressable, Text, StyleSheet, TextInput } from \"react-native\";\nimport { useWeb3React, Web3ReactProvider } from \"@web3-react/core\";\nimport { injected } from \"../actions/connectors\";\nimport Web3 from \"web3\";\nimport TokenListRinkeby from \"../actions/token-list-rinkeby.json\";\nimport { useState } from \"react\";\nimport useBalance from \"../actions/useBalance\";\n\nimport HomeScreen from \"./src/screen/home_screen.tsx\";\n\nfunction getLibrary(provider) {\n  return new Web3(provider);\n}\n\nexport default function () {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Wallet />\n    </Web3ReactProvider>\n  );\n}\n\nfunction Wallet() {\n  const context = useWeb3React<Web3Provider>();\n  const {\n    active,\n    account,\n    chainId,\n    nativeCurrency,\n    library,\n    connector,\n    activate,\n    deactivate,\n  } = useWeb3React();\n\n  const [selectedToken, setSelectedToken] = useState(TokenListRinkeby[0]);\n  const [balance] = useBalance(selectedToken.address, selectedToken.decimals);\n\n  async function connect() {\n    try {\n      await activate(injected);\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  async function disconnect() {\n    try {\n      deactivate();\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  return (\n    <View>\n      <View style={styles.styleBg2}>\n        {active ? (\n          <View style={styles.styleBg2}>\n            <Pressable style={styles.button} onPress={disconnect}>\n              <Text style={styles.text}>Disconnect</Text>\n            </Pressable>\n          </View>\n        ) : (\n          <Pressable style={styles.button} onPress={connect}>\n            <Text style={styles.text}>Connect to MetaMask</Text>\n          </Pressable>\n        )}\n        {active ? <Text>Connected</Text> : <Text>Not connected</Text>}\n      </View>\n      <View style={styles.styleBg2}>\n        {active ? (\n          <View style={styles.styleBg2}>\n            <Text style={styles.input}>Account: {account}</Text>\n            <Text style={styles.input}>Chain ID: {chainId}</Text>\n            <Text style={styles.input}>Balance: {balance}</Text>\n          </View>\n        ) : (\n          <Text></Text>\n        )}\n      </View>\n      <View style={styles.styleBg2}>\n        <Pressable\n          style={styles.button}\n          onPress={() => this.props.navigation.navigate(\"HomeScreen\")}\n        >\n          <Text style={styles.text}>Back to Convertion</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: \"#000e8f\",\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"white\",\n  },\n  input: {\n    backgroundColor: \"#fff\",\n    height: 50,\n    width: \"50%\",\n    margin: -2,\n    borderWidth: 2,\n    borderColor: \"#001fe8\",\n    padding: 10,\n  },\n  styleBg2: {\n    width: \"100%\",\n    alignItems: \"center\",\n    flex: 1,\n    justifyContent: \"center\",\n    marginTop: 70,\n  },\n\n  styleBg3: { width: \"50%\", marginTop: 20, alignItems: \"center\" },\n\n  styleBg: {\n    backgroundColor: \"#00062e\",\n    height: 500,\n    width: 650,\n    marginTop: \"15%\",\n    alignItems: \"center\",\n    borderRadius: 15,\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}